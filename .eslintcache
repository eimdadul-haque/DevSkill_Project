[{"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\index.js":"1","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\App.js":"2","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Store\\Store.js":"3","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\global import.js":"4","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\orderActions.js":"5","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\categoryActions.js":"6","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\productActions.js":"7","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\CartReducer.js":"8","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\ProductReducer.js":"9","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\AccountReducer.js":"10","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\OrderReducer.js":"11","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\CatagoryReducer.js":"12","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\ActionType.js":"13","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\API_LINK\\API_LINK.js":"14","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\auth\\ProtectedRouteCart.jsx":"15","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\auth\\ProtectedRoute.jsx":"16","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Product\\Products.jsx":"17","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Cart\\Cart.jsx":"18","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Product\\Details.jsx":"19","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\UserDash.jsx":"20","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Account\\Login.jsx":"21","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Order\\Oreder.jsx":"22","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\AdminDash.jsx":"23","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\accountActions.js":"24","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\cartActions.js":"25","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Account\\SignUp.jsx":"26","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\ModalReducer.js":"27","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\modalAction.js":"28","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\CRUD Modal\\Product\\AddProduct.jsx":"29","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\CRUD Modal\\Product\\Editproduct.jsx":"30","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\components\\Footer\\Footer.jsx":"31","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\components\\Navigation\\Navigation.jsx":"32","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\components\\NotFound\\NotFound.jsx":"33","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\CRUD Modal\\Category\\AddCategory.jsx":"34","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\CRUD Modal\\Category\\EditCategory.jsx":"35"},{"size":345,"mtime":1617187522769,"results":"36","hashOfConfig":"37"},{"size":1625,"mtime":1619014253955,"results":"38","hashOfConfig":"37"},{"size":1605,"mtime":1619002499016,"results":"39","hashOfConfig":"37"},{"size":824,"mtime":1618992866820,"results":"40","hashOfConfig":"37"},{"size":535,"mtime":1618829878136,"results":"41","hashOfConfig":"37"},{"size":1055,"mtime":1619012800900,"results":"42","hashOfConfig":"37"},{"size":1813,"mtime":1619012620458,"results":"43","hashOfConfig":"37"},{"size":1076,"mtime":1618763692495,"results":"44","hashOfConfig":"37"},{"size":1367,"mtime":1618992305606,"results":"45","hashOfConfig":"37"},{"size":561,"mtime":1618680630715,"results":"46","hashOfConfig":"37"},{"size":350,"mtime":1618826789133,"results":"47","hashOfConfig":"37"},{"size":886,"mtime":1619002071018,"results":"48","hashOfConfig":"37"},{"size":1076,"mtime":1618994483234,"results":"49","hashOfConfig":"37"},{"size":227,"mtime":1618597405578,"results":"50","hashOfConfig":"37"},{"size":374,"mtime":1618824954820,"results":"51","hashOfConfig":"37"},{"size":588,"mtime":1619012575354,"results":"52","hashOfConfig":"37"},{"size":3471,"mtime":1619013268282,"results":"53","hashOfConfig":"37"},{"size":4839,"mtime":1619013984863,"results":"54","hashOfConfig":"37"},{"size":3022,"mtime":1619138066244,"results":"55","hashOfConfig":"37"},{"size":432,"mtime":1618993239079,"results":"56","hashOfConfig":"37"},{"size":4111,"mtime":1619014187633,"results":"57","hashOfConfig":"37"},{"size":881,"mtime":1618587329439,"results":"58","hashOfConfig":"37"},{"size":18279,"mtime":1619014398289,"results":"59","hashOfConfig":"37"},{"size":1689,"mtime":1618682554347,"results":"60","hashOfConfig":"37"},{"size":2328,"mtime":1619012821243,"results":"61","hashOfConfig":"37"},{"size":6324,"mtime":1619014041685,"results":"62","hashOfConfig":"37"},{"size":1243,"mtime":1619004331129,"results":"63","hashOfConfig":"37"},{"size":1488,"mtime":1619012673011,"results":"64","hashOfConfig":"37"},{"size":8445,"mtime":1619013513411,"results":"65","hashOfConfig":"37"},{"size":8485,"mtime":1619013842569,"results":"66","hashOfConfig":"37"},{"size":2983,"mtime":1619012553707,"results":"67","hashOfConfig":"37"},{"size":3765,"mtime":1619012531127,"results":"68","hashOfConfig":"37"},{"size":732,"mtime":1618993418892,"results":"69","hashOfConfig":"37"},{"size":4513,"mtime":1619013913311,"results":"70","hashOfConfig":"37"},{"size":4608,"mtime":1619013886043,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"8tpvvw",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\index.js",[],["145","146"],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\App.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Store\\Store.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\global import.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\orderActions.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\categoryActions.js",["147"],"import { ActionType } from '../ActionType';\r\nimport axios from 'axios';\r\nimport { API_LINK } from '../../API_LINK/API_LINK'\r\n\r\n\r\nexport const getCatagoty = () => async (dispatch, getStore) => {\r\n    try {\r\n        const { data } = await axios.get(API_LINK + 'category/');\r\n\r\n        dispatch({\r\n            type: ActionType.ADD_CATAGORY,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const getCatagotyDetails = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(API_LINK + 'category/' + id);\r\n\r\n        dispatch({\r\n            type: ActionType.ADD_CATAGORY_DETAILS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const categorytDelete = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        const { data } = await axios.delete(API_LINK + \"category/\" + id, {\r\n            headers: {\r\n                authorization: \"bearer \" + sessionStorage.getItem('token')\r\n            }\r\n        });\r\n\r\n        getCatagoty();\r\n\r\n    } catch (error) {\r\n    }\r\n}","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\productActions.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\CartReducer.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\ProductReducer.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\AccountReducer.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\OrderReducer.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\CatagoryReducer.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\ActionType.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\API_LINK\\API_LINK.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\auth\\ProtectedRouteCart.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\auth\\ProtectedRoute.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Product\\Products.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Cart\\Cart.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Product\\Details.jsx",["148"],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\UserDash.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Account\\Login.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Order\\Oreder.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\AdminDash.jsx",["149"],"import React, { useEffect, useState } from 'react'\r\nimport style from './AdminDash.module.css'\r\nimport FadeLoader from 'react-spinners/FadeLoader'\r\nimport '.././../index.css'\r\nimport Navigation from '../../components/Navigation/Navigation'\r\nimport { Container, Row, Col, Card, Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    productModaloff, productModalon, EditproductModalon, EditproductModaloff, EditcategoryModalon,\r\n    EditcategoryModaloff, AddcategoryModaloff, AddcategoryModalon\r\n} from '../../Redux/Actions/modalAction'\r\nimport { getProduts, productDelete } from '../../Redux/Actions/productActions'\r\nimport { categorytDelete, getCatagoty } from '../../Redux/Actions/categoryActions'\r\nimport Footer from '../../components/Footer/Footer'\r\nimport AddProduct from './CRUD Modal/Product/AddProduct'\r\nimport Editproduct from './CRUD Modal/Product/Editproduct'\r\nimport EditCategory from './CRUD Modal/Category/EditCategory'\r\nimport AddCategory from './CRUD Modal/Category/AddCategory'\r\nimport { Delete } from '@material-ui/icons'\r\nimport { Edit } from '@material-ui/icons'\r\n\r\nfunction AdminDash() {\r\n\r\n    const { products } = useSelector(state => state.ProductStore)\r\n    const { catagory } = useSelector(state => state.catagoryStore)\r\n    const { orderList } = useSelector(state => state.OrderStore)\r\n\r\n\r\n    const { module } = useSelector(state => state.ProductModalStore)\r\n    const { edit } = useSelector(state => state.productEditmodalStore)\r\n    const { catagoryModal } = useSelector(state => state.catagorEditModalStore)\r\n    const { AddcatagoryModal } = useSelector(state => state.catagorAddModalStore)\r\n    const [loader, setloader] = useState(true)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getProduts());\r\n        dispatch(getCatagoty());\r\n        setloader(false);\r\n    }, [module, edit, catagoryModal, AddcatagoryModal, dispatch])\r\n\r\n    const removeProduct = (id) => {\r\n        dispatch(productDelete(id))\r\n    }\r\n    const removeCategory = (id) => {\r\n        dispatch(categorytDelete(id))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loader === true ? <div className='App'><FadeLoader /></div> :\r\n                    <div>\r\n                        <Navigation />\r\n                        <div className='mt-3' id={style.main}>\r\n                            <Container fluid>\r\n                                <Row className={style.row}  >\r\n                                    <Col sm={12} md={6} lg={3}>\r\n                                        <Card className='shadow'>\r\n                                            <Card.Header className='text-center'>\r\n                                                Total Product<h6>{products.length}</h6>\r\n                                            </Card.Header>\r\n                                        </Card>\r\n                                    </Col>\r\n                                    <Col sm={12} md={6} lg={3}>\r\n                                        <Card className='shadow '>\r\n                                            <Card.Header className='text-center'>\r\n                                                Total Category <h6>{catagory.length}</h6>\r\n                                            </Card.Header>\r\n                                        </Card>\r\n                                    </Col>\r\n                                    <Col sm={12} md={6} lg={3}>\r\n                                        <Card className='shadow '>\r\n                                            <Card.Header className='text-center'>\r\n                                                Total Categoty <h6>0</h6>\r\n                                            </Card.Header>\r\n                                        </Card>\r\n                                    </Col>\r\n                                    <Col sm={12} md={6} lg={3}>\r\n                                        <Card className='shadow '>\r\n                                            <Card.Header className='text-center'>\r\n                                                Total Order <h6>0</h6>\r\n                                            </Card.Header>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n\r\n                                <Row className='mt-3'  >\r\n                                    <Col sm={12} md={6} >\r\n                                        <Card className='shadow'>\r\n                                            <Card.Header className='d-flex justify-content-between'>\r\n                                                <div className='text-info'>\r\n                                                    Product Table\r\n                                                </div>\r\n                                                <div >\r\n                                                    <Button onClick={() => dispatch(productModalon())} variant='outline-dark'>Add Product</Button>\r\n                                                </div>\r\n                                            </Card.Header>\r\n                                            <div className={style.scrollbar}>\r\n                                                <Table striped bordered hover style={{ backgroundColor: 'white' }} >\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Image</th>\r\n                                                            <th>Title</th>\r\n                                                            <th>Price</th>\r\n                                                            <th>Stock</th>\r\n                                                            <th></th>\r\n                                                            <th></th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    {\r\n                                                        products.length === 0 ? \"No data in database\" :\r\n                                                            <>\r\n                                                                <tbody >\r\n                                                                    {\r\n                                                                        products.map((data, index) => {\r\n                                                                            return (\r\n\r\n\r\n                                                                                <tr key={index}>\r\n                                                                                    <td><img style={{ width: '50px', height: '50px' }} src={data.image} alt=\"...\" /></td>\r\n                                                                                    <td>{data.title}</td>\r\n                                                                                    <td>{data.price} </td>\r\n                                                                                    <td>{data.stock}</td>\r\n                                                                                    <td ><span className='text-danger' onClick={() => removeProduct(data._id)} ><Delete /></span></td>\r\n                                                                                    <td ><span className='text-info' onClick={() => dispatch(EditproductModalon(data._id))} ><Edit /></span></td>\r\n                                                                                </tr>\r\n\r\n                                                                            )\r\n                                                                        })\r\n                                                                    }\r\n                                                                </tbody>\r\n                                                            </>\r\n                                                    }\r\n                                                </Table>\r\n                                            </div>\r\n                                        </Card>\r\n                                        <AddProduct show={module} onHide={() => dispatch(productModaloff())} />\r\n                                        <Editproduct show={edit} onHide={() => dispatch(EditproductModaloff())} />\r\n                                    </Col>\r\n                                    <Col sm={12} md={6} >\r\n                                        <Card className='shadow'>\r\n                                            <Card.Header className='d-flex justify-content-between'>\r\n                                                <div className='text-info'>\r\n                                                    Category Table\r\n                                                </div>\r\n                                                <div >\r\n                                                    <Button onClick={() => dispatch(AddcategoryModalon())} variant='outline-dark'>Add Category</Button>\r\n                                                </div>\r\n                                            </Card.Header>\r\n                                            <div className={style.scrollbar}>\r\n                                                <Table striped bordered hover style={{ backgroundColor: 'white' }} >\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Image</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Description</th>\r\n                                                            <th></th>\r\n                                                            <th></th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    {\r\n                                                        catagory.length === 0 ? \"No data in database\" :\r\n                                                            <> <tbody >\r\n                                                                {\r\n                                                                    catagory.map((data, index) => {\r\n                                                                        return (\r\n\r\n\r\n                                                                            <tr key={index}>\r\n                                                                                <td><img style={{ width: '50px', height: '50px' }} src={data.image} alt=\"...\" /></td>\r\n                                                                                <td>{data.name}</td>\r\n                                                                                <td>{data.description} </td>\r\n                                                                                <td ><span onClick={() => removeCategory(data._id)} className='text-danger' ><Delete /></span></td>\r\n                                                                                <td ><span className='text-info' onClick={() => dispatch(EditcategoryModalon(data._id))} ><Edit /></span></td>\r\n                                                                            </tr>\r\n\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </tbody>\r\n                                                            </>\r\n                                                    }\r\n                                                </Table>\r\n                                            </div>\r\n                                        </Card>\r\n                                        <AddCategory show={AddcatagoryModal} onHide={() => dispatch(AddcategoryModaloff())} />\r\n                                        <EditCategory show={catagoryModal} onHide={() => dispatch(EditcategoryModaloff())} />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className='mt-2 mb-2'  >\r\n                                    <Col sm={12} md={6} >\r\n                                        <Card className='shadow card_D'>\r\n                                            <Card.Header className='d-flex justify-content-between'>\r\n                                                <div className='text-info'>\r\n                                                    User Table\r\n                                                </div>\r\n\r\n                                                <div >\r\n                                                    <Button variant='outline-dark'>Add User</Button>\r\n                                                </div>\r\n                                            </Card.Header>\r\n                                            <Table striped bordered hover>\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>First Name</th>\r\n                                                        <th>Last Name</th>\r\n                                                        <th>Username</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>1</td>\r\n                                                        <td>Mark</td>\r\n                                                        <td>Otto</td>\r\n                                                        <td>@mdo</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>2</td>\r\n                                                        <td>Jacob</td>\r\n                                                        <td>Thornton</td>\r\n                                                        <td>@fat</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>3</td>\r\n                                                        <td colSpan=\"2\">Larry the Bird</td>\r\n                                                        <td>@twitter</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </Table>\r\n\r\n                                        </Card>\r\n                                        {/* <AddProduct show={modal} onHide={() => setmodal(false)} /> */}\r\n                                    </Col>\r\n                                    <Col sm={12} md={6} >\r\n                                        <Card className='shadow card_D'>\r\n                                            <Card.Header className='d-flex justify-content-between'>\r\n                                                <div className='text-info'>\r\n                                                    User Table\r\n                                                </div>\r\n\r\n                                                <div >\r\n                                                    <Button variant='outline-dark'>Add User</Button>\r\n                                                </div>\r\n                                            </Card.Header>\r\n                                            <Table striped bordered hover>\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>First Name</th>\r\n                                                        <th>Last Name</th>\r\n                                                        <th>Username</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>1</td>\r\n                                                        <td>Mark</td>\r\n                                                        <td>Otto</td>\r\n                                                        <td>@mdo</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>2</td>\r\n                                                        <td>Jacob</td>\r\n                                                        <td>Thornton</td>\r\n                                                        <td>@fat</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>3</td>\r\n                                                        <td colSpan=\"2\">Larry the Bird</td>\r\n                                                        <td>@twitter</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </Table>\r\n\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n\r\n                        </div>\r\n                        <Footer />\r\n                    </div>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default AdminDash;\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\accountActions.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\cartActions.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Account\\SignUp.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\ModalReducer.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\modalAction.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\CRUD Modal\\Product\\AddProduct.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\CRUD Modal\\Product\\Editproduct.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\components\\Navigation\\Navigation.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\components\\NotFound\\NotFound.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\CRUD Modal\\Category\\AddCategory.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\CRUD Modal\\Category\\EditCategory.jsx",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":37,"column":17,"nodeType":"156","messageId":"157","endLine":37,"endColumn":21},{"ruleId":"158","severity":1,"message":"159","line":24,"column":8,"nodeType":"160","endLine":24,"endColumn":10,"suggestions":"161"},{"ruleId":"154","severity":1,"message":"162","line":26,"column":13,"nodeType":"156","messageId":"157","endLine":26,"endColumn":22},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'param.id', and 'product'. Either include them or remove the dependency array.","ArrayExpression",["165"],"'orderList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},"Update the dependencies array to be: [dispatch, param.id, product]",{"range":"168","text":"169"},[966,968],"[dispatch, param.id, product]"]