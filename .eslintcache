[{"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\index.js":"1","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\App.js":"2","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Store\\Store.js":"3","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\global import.js":"4","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\orderActions.js":"5","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\categoryActions.js":"6","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\productActions.js":"7","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\CartReducer.js":"8","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\ProductReducer.js":"9","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\AccountReducer.js":"10","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\OrderReducer.js":"11","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\CatagoryReducer.js":"12","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\ActionType.js":"13","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\API_LINK\\API_LINK.js":"14","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\auth\\ProtectedRouteCart.jsx":"15","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\auth\\ProtectedRoute.jsx":"16","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Product\\Products.jsx":"17","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Cart\\Cart.jsx":"18","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Product\\Details.jsx":"19","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\UserDash.jsx":"20","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Account\\Login.jsx":"21","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Order\\Oreder.jsx":"22","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\AdminDash.jsx":"23","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\accountActions.js":"24","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\cartActions.js":"25","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Account\\SignUp.jsx":"26","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\ModalReducer.js":"27","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\modalAction.js":"28","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\CRUD Modal\\Product\\AddProduct.jsx":"29","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\CRUD Modal\\Product\\Editproduct.jsx":"30","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\components\\Footer\\Footer.jsx":"31","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\components\\Navigation\\Navigation.jsx":"32","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\components\\NotFound\\NotFound.jsx":"33","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\CRUD Modal\\Category\\AddCategory.jsx":"34","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\CRUD Modal\\Category\\EditCategory.jsx":"35"},{"size":345,"mtime":1617187522769,"results":"36","hashOfConfig":"37"},{"size":1613,"mtime":1619154893883,"results":"38","hashOfConfig":"37"},{"size":1615,"mtime":1619154724690,"results":"39","hashOfConfig":"37"},{"size":824,"mtime":1618992866820,"results":"40","hashOfConfig":"37"},{"size":535,"mtime":1618829878136,"results":"41","hashOfConfig":"37"},{"size":1055,"mtime":1619012800900,"results":"42","hashOfConfig":"37"},{"size":1504,"mtime":1619187576435,"results":"43","hashOfConfig":"37"},{"size":409,"mtime":1619148438380,"results":"44","hashOfConfig":"37"},{"size":1367,"mtime":1618992305606,"results":"45","hashOfConfig":"37"},{"size":561,"mtime":1618680630715,"results":"46","hashOfConfig":"37"},{"size":350,"mtime":1618826789133,"results":"47","hashOfConfig":"37"},{"size":886,"mtime":1619002071018,"results":"48","hashOfConfig":"37"},{"size":1116,"mtime":1619140884719,"results":"49","hashOfConfig":"37"},{"size":227,"mtime":1618597405578,"results":"50","hashOfConfig":"37"},{"size":374,"mtime":1618824954820,"results":"51","hashOfConfig":"37"},{"size":588,"mtime":1619012575354,"results":"52","hashOfConfig":"37"},{"size":3497,"mtime":1619239685272,"results":"53","hashOfConfig":"37"},{"size":4425,"mtime":1619154075639,"results":"54","hashOfConfig":"37"},{"size":3357,"mtime":1619321499353,"results":"55","hashOfConfig":"37"},{"size":4691,"mtime":1619239942080,"results":"56","hashOfConfig":"37"},{"size":4111,"mtime":1619014187633,"results":"57","hashOfConfig":"37"},{"size":881,"mtime":1618587329439,"results":"58","hashOfConfig":"37"},{"size":18719,"mtime":1619239437548,"results":"59","hashOfConfig":"37"},{"size":1689,"mtime":1618682554347,"results":"60","hashOfConfig":"37"},{"size":956,"mtime":1619155154853,"results":"61","hashOfConfig":"37"},{"size":6324,"mtime":1619014041685,"results":"62","hashOfConfig":"37"},{"size":1243,"mtime":1619004331129,"results":"63","hashOfConfig":"37"},{"size":1488,"mtime":1619012673011,"results":"64","hashOfConfig":"37"},{"size":8445,"mtime":1619013513411,"results":"65","hashOfConfig":"37"},{"size":8485,"mtime":1619013842569,"results":"66","hashOfConfig":"37"},{"size":2983,"mtime":1619012553707,"results":"67","hashOfConfig":"37"},{"size":3856,"mtime":1619155676078,"results":"68","hashOfConfig":"37"},{"size":732,"mtime":1618993418892,"results":"69","hashOfConfig":"37"},{"size":4513,"mtime":1619013913311,"results":"70","hashOfConfig":"37"},{"size":4608,"mtime":1619013886043,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"8tpvvw",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\index.js",[],["149","150"],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\App.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Store\\Store.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\global import.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\orderActions.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\categoryActions.js",["151"],"import { ActionType } from '../ActionType';\r\nimport axios from 'axios';\r\nimport { API_LINK } from '../../API_LINK/API_LINK'\r\n\r\n\r\nexport const getCatagoty = () => async (dispatch, getStore) => {\r\n    try {\r\n        const { data } = await axios.get(API_LINK + 'category/');\r\n\r\n        dispatch({\r\n            type: ActionType.ADD_CATAGORY,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const getCatagotyDetails = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(API_LINK + 'category/' + id);\r\n\r\n        dispatch({\r\n            type: ActionType.ADD_CATAGORY_DETAILS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const categorytDelete = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        const { data } = await axios.delete(API_LINK + \"category/\" + id, {\r\n            headers: {\r\n                authorization: \"bearer \" + sessionStorage.getItem('token')\r\n            }\r\n        });\r\n\r\n        getCatagoty();\r\n\r\n    } catch (error) {\r\n    }\r\n}","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\productActions.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\CartReducer.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\ProductReducer.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\AccountReducer.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\OrderReducer.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\CatagoryReducer.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\ActionType.js",["152"],"export const ActionType = {\r\n\r\n    //Cart\r\n    ADD_CART: \"ADD_CART\",\r\n    REMOVE_CART: \"REMOVE_CART\",\r\n    CLEAR_CART: \"CLEAR_CART\",\r\n\r\n    //Product\r\n    GET_PRODUCT_REQUEST: \"GET_PRODUCT_REQUEST\",\r\n    GET_PRODUCT_SUCCESS: \"GET_PRODUCT_SUCCESS\",\r\n    GET_PRODUCT_FAIL: \"GET_PRODUCT_FAIL\",\r\n\r\n    GET_PRODUCT_DETAILS_REQUEST: \"GET_PRODUCT_REQUEST_DETAILS\",\r\n    GET_PRODUCT_DETAILS_SUCCESS: \"GET_PRODUCT_DETAILS_SUCCESS\",\r\n    GET_PRODUCT_DETAILS_FAIL: \"GET_PRODUCT_DETAILS_FAIL\",\r\n    GET_PRODUCT_DETAILS_RESET: \"GET_PRODUCT_DETAILS_RESET\",\r\n\r\n    //Account\r\n    LOGIN: \"LOGIN\",\r\n    SIGNUP: \"SIGNUP\",\r\n\r\n    //Catagory\r\n\r\n    ADD_CATAGORY: \"ADD_CATAGORY\",\r\n    ADD_CATAGORY_DETAILS: \"ADD_CATAGORY_DETAILS\",\r\n\r\n    //\r\n    GET_CART: \"GET_CART\",\r\n\r\n    //Order\r\n    GET_ORDER: \"GET_ORDER\",\r\n\r\n    //modal\r\n    PRODUCT_MODAL: \"PRODUCT_MODAL\",\r\n    PRODUCTEDIT_MODAL: \"PRODUCTEDIT_MODAL\",\r\n    ADD_CATEGORY_MODAL : 'ADD_CATEGORY_MODAL',\r\n    EDIT_CATEGORY_MODAL : \"EDIT_CATEGORY_MODAL\",\r\n\r\n    //Edit Id\r\n\r\n    EDIT_ID: \"EDIT_ID\",\r\n    EDIT_CATEGORY_ID: \"EDIT_CATEGORY_ID\",\r\n\r\n    //\r\n    GET_CART : \"GET_CART\"\r\n\r\n}\r\n","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\API_LINK\\API_LINK.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\auth\\ProtectedRouteCart.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\auth\\ProtectedRoute.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Product\\Products.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Cart\\Cart.jsx",["153","154"],"import React, { useEffect } from 'react';\r\nimport { Col, Row, Card, Button, Container, Table } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Delete } from '@material-ui/icons'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport Navigation from '../../components/Navigation/Navigation'\r\n\r\n\r\nexport default function Cart() {\r\n    var cartList = []\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <> <Navigation />\r\n            <div style={{ height: '100vh' }}>\r\n                <Container className='d-flex justify-content-center align-content-center'>\r\n                    {cartList.length === 0 ? <div>\r\n                        <h3 style={{ marginTop: '50px' }}>Your cart is empty</h3> click <Link to='/'>here</Link> to continue shopping.\r\n                    </div> :\r\n\r\n                        <div>\r\n                            <Row style={{ marginTop: '50px' }}>\r\n                                <Col md={8}>\r\n                                    <Table striped bordered hover >\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Image</th>\r\n                                                <th>Title</th>\r\n                                                <th>Price</th>\r\n                                                <th>Qty</th>\r\n                                                <th></th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        {\r\n                                            cartList.map((data, index) => {\r\n                                                return (\r\n\r\n                                                    <tbody key={index}>\r\n                                                        <tr>\r\n                                                            <td><img style={{ width: '50px', height: '50px' }} src={data.img} alt=\"...\" /></td>\r\n                                                            <td>{data.name}</td>\r\n                                                            <td>${data.price} </td>\r\n                                                            <td>\r\n                                                                <select value={data.qty} >\r\n                                                                    {[...Array(data.stock).keys()].map((data) => (\r\n                                                                        <option key={data + 1} value={data + 1}>{data + 1}</option>\r\n                                                                    ))}\r\n\r\n                                                                </select>\r\n                                                            </td>\r\n                                                            <td ><span className='text-danger' ><Delete /></span></td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Table>\r\n                                    <div>\r\n                                        <button className='btn btn-outline-info' onClick={() => { history.push('/') }}>CONTINUE SHOPPING</button>\r\n                                        <button className='btn btn-outline-secondary ml-3' >CLEAR CART</button>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Card style={{ width: '18rem' }}>\r\n                                        <Card.Body>\r\n\r\n                                        </Card.Body>\r\n                                        <Card.Footer>\r\n                                            <Button style={{ width: '100%' }} className='btn btn-dark '>Checkout</Button>\r\n                                        </Card.Footer>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    }\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Product\\Details.jsx",["155"],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\UserDash.jsx",["156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178"],"import React, { useEffect, useState } from 'react'\r\nimport style from './AdminDash.module.css'\r\nimport FadeLoader from 'react-spinners/FadeLoader'\r\nimport '.././../index.css'\r\nimport Navigation from '../../components/Navigation/Navigation'\r\nimport { Container, Row, Col, Card, Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    productModaloff, productModalon, EditproductModalon, EditproductModaloff, EditcategoryModalon,\r\n    EditcategoryModaloff, AddcategoryModaloff, AddcategoryModalon\r\n} from '../../Redux/Actions/modalAction'\r\nimport { getProduts, productDelete } from '../../Redux/Actions/productActions'\r\nimport { categorytDelete, getCatagoty } from '../../Redux/Actions/categoryActions'\r\nimport Footer from '../../components/Footer/Footer'\r\nimport AddProduct from './CRUD Modal/Product/AddProduct'\r\nimport Editproduct from './CRUD Modal/Product/Editproduct'\r\nimport EditCategory from './CRUD Modal/Category/EditCategory'\r\nimport AddCategory from './CRUD Modal/Category/AddCategory'\r\nimport { Delete } from '@material-ui/icons'\r\nimport { Edit } from '@material-ui/icons'\r\nimport { getCart } from '../../Redux/Actions/cartActions'\r\n\r\nfunction AdminDash() {\r\n\r\n\r\n\r\n    const { products } = useSelector(state => state.ProductStore)\r\n    const { catagory } = useSelector(state => state.catagoryStore)\r\n    const { orderList } = useSelector(state => state.OrderStore)\r\n\r\n\r\n    const { module } = useSelector(state => state.ProductModalStore)\r\n    const { edit } = useSelector(state => state.productEditmodalStore)\r\n    const { catagoryModal } = useSelector(state => state.catagorEditModalStore)\r\n    const { AddcatagoryModal } = useSelector(state => state.catagorAddModalStore)\r\n    const [loader, setloader] = useState(true)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getProduts());\r\n        dispatch(getCatagoty());\r\n        dispatch(getCart());\r\n        setloader(false);\r\n    }, [dispatch])\r\n\r\n    const removeProduct = (id) => {\r\n        dispatch(productDelete(id))\r\n        dispatch(getProduts());\r\n    }\r\n    const removeCategory = (id) => {\r\n        dispatch(categorytDelete(id))\r\n        dispatch(getCatagoty());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loader === true ? <div className='App'><FadeLoader /></div> :\r\n                    <div>\r\n                        <Navigation />\r\n                        <div className='mt-3' id={style.main}>\r\n                            <Container fluid>\r\n                                <Row className={style.row}  >\r\n                                    <Col sm={12} md={6} lg={3}>\r\n                                        <Card className='shadow'>\r\n                                            <Card.Header className='text-center'>\r\n                                                Total Product<h6>{products.length}</h6>\r\n                                            </Card.Header>\r\n                                        </Card>\r\n                                    </Col>\r\n                                    <Col sm={12} md={6} lg={3}>\r\n                                        <Card className='shadow '>\r\n                                            <Card.Header className='text-center'>\r\n                                                Total Category <h6>{catagory.length}</h6>\r\n                                            </Card.Header>\r\n                                        </Card>\r\n                                    </Col>\r\n                                    <Col sm={12} md={6} lg={3}>\r\n                                        <Card className='shadow '>\r\n                                            <Card.Header className='text-center'>\r\n                                                Total Categoty <h6>0</h6>\r\n                                            </Card.Header>\r\n                                        </Card>\r\n                                    </Col>\r\n                                    <Col sm={12} md={6} lg={3}>\r\n                                        <Card className='shadow '>\r\n                                            <Card.Header className='text-center'>\r\n                                                Total Order <h6>0</h6>\r\n                                            </Card.Header>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n\r\n                                \r\n                            </Container>\r\n\r\n                        </div>\r\n                        <Footer />\r\n                    </div>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default AdminDash;\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Account\\Login.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Order\\Oreder.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\AdminDash.jsx",["179"],"import React, { useEffect, useState } from 'react'\r\nimport style from './AdminDash.module.css'\r\nimport FadeLoader from 'react-spinners/FadeLoader'\r\nimport '.././../index.css'\r\nimport Navigation from '../../components/Navigation/Navigation'\r\nimport { Container, Row, Col, Card, Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    productModaloff, productModalon, EditproductModalon, EditproductModaloff, EditcategoryModalon,\r\n    EditcategoryModaloff, AddcategoryModaloff, AddcategoryModalon\r\n} from '../../Redux/Actions/modalAction'\r\nimport { getProduts, productDelete } from '../../Redux/Actions/productActions'\r\nimport { categorytDelete, getCatagoty } from '../../Redux/Actions/categoryActions'\r\nimport Footer from '../../components/Footer/Footer'\r\nimport AddProduct from './CRUD Modal/Product/AddProduct'\r\nimport Editproduct from './CRUD Modal/Product/Editproduct'\r\nimport EditCategory from './CRUD Modal/Category/EditCategory'\r\nimport AddCategory from './CRUD Modal/Category/AddCategory'\r\nimport { Delete } from '@material-ui/icons'\r\nimport { Edit } from '@material-ui/icons'\r\nimport { getCart } from '../../Redux/Actions/cartActions'\r\n\r\nfunction AdminDash() {\r\n\r\n\r\n\r\n    const { products } = useSelector(state => state.ProductStore)\r\n    const { catagory } = useSelector(state => state.catagoryStore)\r\n    const { orderList } = useSelector(state => state.OrderStore)\r\n\r\n\r\n    const { module } = useSelector(state => state.ProductModalStore)\r\n    const { edit } = useSelector(state => state.productEditmodalStore)\r\n    const { catagoryModal } = useSelector(state => state.catagorEditModalStore)\r\n    const { AddcatagoryModal } = useSelector(state => state.catagorAddModalStore)\r\n    const [loader, setloader] = useState(true)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getProduts());\r\n        dispatch(getCatagoty());\r\n        dispatch(getCart());\r\n        setloader(false);\r\n    }, [dispatch])\r\n\r\n    const removeProduct = (id) => {\r\n        dispatch(productDelete(id))\r\n        dispatch(getProduts());\r\n    }\r\n    const removeCategory = (id) => {\r\n        dispatch(categorytDelete(id))\r\n        dispatch(getCatagoty());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loader === true ? <div className='App'><FadeLoader /></div> :\r\n                    <div>\r\n                        <Navigation />\r\n                        <div className='mt-3' id={style.main}>\r\n                            <Container fluid>\r\n                                <Row className={style.row}  >\r\n                                    <Col sm={12} md={6} lg={3}>\r\n                                        <Card className='shadow'>\r\n                                            <Card.Header className='text-center'>\r\n                                                Total Product<h6>{products.length}</h6>\r\n                                            </Card.Header>\r\n                                        </Card>\r\n                                    </Col>\r\n                                    <Col sm={12} md={6} lg={3}>\r\n                                        <Card className='shadow '>\r\n                                            <Card.Header className='text-center'>\r\n                                                Total Category <h6>{catagory.length}</h6>\r\n                                            </Card.Header>\r\n                                        </Card>\r\n                                    </Col>\r\n                                    <Col sm={12} md={6} lg={3}>\r\n                                        <Card className='shadow '>\r\n                                            <Card.Header className='text-center'>\r\n                                                Total Categoty <h6>0</h6>\r\n                                            </Card.Header>\r\n                                        </Card>\r\n                                    </Col>\r\n                                    <Col sm={12} md={6} lg={3}>\r\n                                        <Card className='shadow '>\r\n                                            <Card.Header className='text-center'>\r\n                                                Total Order <h6>0</h6>\r\n                                            </Card.Header>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n\r\n                                <Row className='mt-3'  >\r\n                                    <Col sm={12} md={6} >\r\n                                        <Card className='shadow'>\r\n                                            <Card.Header className='d-flex justify-content-between'>\r\n                                                <div className='text-info font-weight-bolder'>\r\n                                                    Product Table\r\n                                                </div>\r\n                                                <div >\r\n                                                    <Button onClick={() => dispatch(productModalon())} variant='outline-dark'>Add Product</Button>\r\n                                                </div>\r\n                                            </Card.Header>\r\n                                            <div className={style.scrollbar}>\r\n                                                <Table striped bordered hover style={{ backgroundColor: 'white' }} >\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Image</th>\r\n                                                            <th>Title</th>\r\n                                                            <th>Price</th>\r\n                                                            <th>Stock</th>\r\n                                                            <th></th>\r\n                                                            <th></th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    {\r\n                                                        products.length === 0 ? \"No data in database\" :\r\n                                                            <>\r\n                                                                <tbody >\r\n                                                                    {\r\n                                                                        products.map((data, index) => {\r\n                                                                            return (\r\n\r\n\r\n                                                                                <tr key={index}>\r\n                                                                                    <td><img style={{ width: '50px', height: '50px' }} src={data.image} alt=\"...\" /></td>\r\n                                                                                    <td>{data.title}</td>\r\n                                                                                    <td>{data.price} </td>\r\n                                                                                    <td>{data.stock}</td>\r\n                                                                                    <td ><span className='text-danger' onClick={() => removeProduct(data._id)} ><Delete /></span></td>\r\n                                                                                    <td ><span className='text-info' onClick={() => dispatch(EditproductModalon(data._id))} ><Edit /></span></td>\r\n                                                                                </tr>\r\n\r\n                                                                            )\r\n                                                                        })\r\n                                                                    }\r\n                                                                </tbody>\r\n                                                            </>\r\n                                                    }\r\n                                                </Table>\r\n                                            </div>\r\n                                        </Card>\r\n                                        <AddProduct show={module} onHide={() => dispatch(productModaloff())} />\r\n                                        <Editproduct show={edit} onHide={() => dispatch(EditproductModaloff())} />\r\n                                    </Col>\r\n                                    <Col sm={12} md={6} >\r\n                                        <Card className='shadow'>\r\n                                            <Card.Header className='d-flex justify-content-between'>\r\n                                                <div className=' text-info font-weight-bolder'>\r\n                                                    Category Table\r\n                                                </div>\r\n                                                <div >\r\n                                                    <Button onClick={() => dispatch(AddcategoryModalon())} variant='outline-dark'>Add Category</Button>\r\n                                                </div>\r\n                                            </Card.Header>\r\n                                            <div className={style.scrollbar}>\r\n                                                <Table striped bordered hover style={{ backgroundColor: 'white' }} >\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Image</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Description</th>\r\n                                                            <th></th>\r\n                                                            <th></th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    {\r\n                                                        catagory.length === 0 ? \"No data in database\" :\r\n                                                            <> <tbody >\r\n                                                                {\r\n                                                                    catagory.map((data, index) => {\r\n                                                                        return (\r\n\r\n\r\n                                                                            <tr key={index}>\r\n                                                                                <td><img style={{ width: '50px', height: '50px' }} src={data.image} alt=\"...\" /></td>\r\n                                                                                <td>{data.name}</td>\r\n                                                                                <td>{data.description} </td>\r\n                                                                                <td ><span onClick={() => removeCategory(data._id)} className='text-danger' ><Delete /></span></td>\r\n                                                                                <td ><span className='text-info' onClick={() => dispatch(EditcategoryModalon(data._id))} ><Edit /></span></td>\r\n                                                                            </tr>\r\n\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </tbody>\r\n                                                            </>\r\n                                                    }\r\n                                                </Table>\r\n                                            </div>\r\n                                        </Card>\r\n                                        <AddCategory show={AddcatagoryModal} onHide={() => dispatch(AddcategoryModaloff())} />\r\n                                        <EditCategory show={catagoryModal} onHide={() => dispatch(EditcategoryModaloff())} />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className='mt-2 mb-2'  >\r\n                                    <Col sm={12} md={6} >\r\n                                    <Card className='shadow'>\r\n                                            <Card.Header className='d-flex justify-content-between'>\r\n                                                <div className='text-info font-weight-bolder'>\r\n                                                    Order Table\r\n                                                </div>\r\n                                            </Card.Header>\r\n                                            <div className={style.scrollbar}>\r\n                                                <Table striped bordered hover style={{ backgroundColor: 'white' }} >\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>User Id</th>\r\n                                                            <th>Date</th>\r\n                                                            <th>Product Id</th>\r\n                                                            <th>Quantity</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    {\r\n                                                        catagory.length === 0 ? \"No data in database\" :\r\n                                                            <> <tbody >\r\n                                                                {\r\n                                                                    catagory.map((data, index) => {\r\n                                                                        return (\r\n\r\n\r\n                                                                            <tr key={index}>\r\n                                                                                <td><img style={{ width: '50px', height: '50px' }} src={data.image} alt=\"...\" /></td>\r\n                                                                                <td>{data.name}</td>\r\n                                                                                <td>{data.description} </td>\r\n                                                                                <td ></td>\r\n                                                                            </tr>\r\n\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </tbody>\r\n                                                            </>\r\n                                                    }\r\n                                                </Table>\r\n                                            </div>\r\n                                        </Card>\r\n                                        {/* <AddProduct show={modal} onHide={() => setmodal(false)} /> */}\r\n                                    </Col>\r\n                                    <Col sm={12} md={6} >\r\n                                        <Card className='shadow '>\r\n                                            <Card.Header className='d-flex justify-content-between'>\r\n                                                <div className='text-info font-weight-bolder'>\r\n                                                    User Table\r\n                                                </div>\r\n\r\n                                                <div >\r\n                                                    <Button variant='outline-dark'>Add User</Button>\r\n                                                </div>\r\n                                            </Card.Header>\r\n                                            <Table striped bordered hover>\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>First Name</th>\r\n                                                        <th>Last Name</th>\r\n                                                        <th>Username</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>1</td>\r\n                                                        <td>Mark</td>\r\n                                                        <td>Otto</td>\r\n                                                        <td>@mdo</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>2</td>\r\n                                                        <td>Jacob</td>\r\n                                                        <td>Thornton</td>\r\n                                                        <td>@fat</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>3</td>\r\n                                                        <td colSpan=\"2\">Larry the Bird</td>\r\n                                                        <td>@twitter</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </Table>\r\n\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n\r\n                        </div>\r\n                        <Footer />\r\n                    </div>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default AdminDash;\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\accountActions.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\cartActions.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Account\\SignUp.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Reducer\\ModalReducer.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Redux\\Actions\\modalAction.js",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\CRUD Modal\\Product\\AddProduct.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\CRUD Modal\\Product\\Editproduct.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\components\\Navigation\\Navigation.jsx",["180","181"],"import React, { useState } from 'react'\r\nimport { Navbar, Nav, Form, FormControl, Container } from 'react-bootstrap'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport { ShoppingCart } from '@material-ui/icons';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ExitToApp from '@material-ui/icons/ExitToApp';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport { Badge } from '@material-ui/core'\r\nimport { getCart } from '../../Redux/Actions/cartActions'\r\n\r\nexport default function Navigation() {\r\n\r\n    var { cartNum } = useSelector(state => state.getCartStore)\r\n    const dispatch = useDispatch()\r\n    const [state, setstate] = useState('')\r\n\r\n    const logout = () => {\r\n        sessionStorage.clear();\r\n        dispatch(getCart());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <Navbar.Brand ><Link to='/' style={{ textDecoration: 'none', borderRadius: '10px', color: 'white' }}>FakeCommerce</Link></Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                        </Nav>\r\n                        <Nav>\r\n                            <Form inline>\r\n                                <FormControl style={{ width: '80%' }} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                            </Form>\r\n                        </Nav  >\r\n\r\n                        <Nav className=\"mr-3\">\r\n                            <NavLink style={{ textDecoration: 'none', borderRadius: '10px' }} to='/' className='d-inline p-1 bg-dark text-white'>\r\n                                <HomeIcon style={{ height: '25px', width: '25px' }} />\r\n                            </NavLink>\r\n                        </Nav>\r\n\r\n                        {\r\n                            sessionStorage.getItem('token') ? <Nav className=\"mr-3\">\r\n                                <NavLink style={{ textDecoration: 'none', borderRadius: '10px' }} to='/dashboard' className='d-inline p-1 bg-dark text-white'>\r\n                                    <DashboardIcon style={{ height: '25px', width: '25px' }} />\r\n                                </NavLink>\r\n                            </Nav> : <></>\r\n                        }\r\n                        <Nav className=\"mr-3\">\r\n                            <NavLink style={{ textDecoration: 'none', borderRadius: '10px' }} to='/cart' className='d-inline p-1 bg-dark text-white'>\r\n                                <Badge badgeContent={cartNum.length} color='secondary'><ShoppingCart style={{ height: '25px', width: '25px' }} /></Badge>\r\n                            </NavLink>\r\n                        </Nav>\r\n                        {\r\n                            sessionStorage.getItem('token') == null ? <Nav >\r\n                                <NavLink style={{ textDecoration: 'none', borderRadius: '10px' }} to='/login' className='d-inline p-1 bg-dark text-white'>\r\n                                    <LockOpenIcon style={{ height: '25px', width: '25px' }} />\r\n                                </NavLink>\r\n                            </Nav> : <Nav >\r\n                                <NavLink onClick={() => logout()} style={{ textDecoration: 'none', borderRadius: '10px' }} to='/login' className='d-inline p-1 bg-dark text-white'>\r\n                                    <ExitToApp />\r\n                                </NavLink>\r\n                            </Nav>\r\n                        }\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\components\\NotFound\\NotFound.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\CRUD Modal\\Category\\AddCategory.jsx",[],"C:\\Users\\EIMDADUL\\Desktop\\React-Site\\src\\Pages\\Deshboard\\CRUD Modal\\Category\\EditCategory.jsx",[],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":37,"column":17,"nodeType":"188","messageId":"189","endLine":37,"endColumn":21},{"ruleId":"190","severity":1,"message":"191","line":45,"column":5,"nodeType":"192","messageId":"193","endLine":45,"endColumn":13},{"ruleId":"186","severity":1,"message":"194","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":21},{"ruleId":"186","severity":1,"message":"195","line":11,"column":11,"nodeType":"188","messageId":"189","endLine":11,"endColumn":19},{"ruleId":"196","severity":1,"message":"197","line":27,"column":8,"nodeType":"198","endLine":27,"endColumn":10,"suggestions":"199"},{"ruleId":"186","severity":1,"message":"200","line":6,"column":37,"nodeType":"188","messageId":"189","endLine":6,"endColumn":42},{"ruleId":"186","severity":1,"message":"201","line":6,"column":44,"nodeType":"188","messageId":"189","endLine":6,"endColumn":50},{"ruleId":"186","severity":1,"message":"202","line":9,"column":5,"nodeType":"188","messageId":"189","endLine":9,"endColumn":20},{"ruleId":"186","severity":1,"message":"203","line":9,"column":22,"nodeType":"188","messageId":"189","endLine":9,"endColumn":36},{"ruleId":"186","severity":1,"message":"204","line":9,"column":38,"nodeType":"188","messageId":"189","endLine":9,"endColumn":56},{"ruleId":"186","severity":1,"message":"205","line":9,"column":58,"nodeType":"188","messageId":"189","endLine":9,"endColumn":77},{"ruleId":"186","severity":1,"message":"206","line":9,"column":79,"nodeType":"188","messageId":"189","endLine":9,"endColumn":98},{"ruleId":"186","severity":1,"message":"207","line":10,"column":5,"nodeType":"188","messageId":"189","endLine":10,"endColumn":25},{"ruleId":"186","severity":1,"message":"208","line":10,"column":27,"nodeType":"188","messageId":"189","endLine":10,"endColumn":46},{"ruleId":"186","severity":1,"message":"209","line":10,"column":48,"nodeType":"188","messageId":"189","endLine":10,"endColumn":66},{"ruleId":"186","severity":1,"message":"210","line":15,"column":8,"nodeType":"188","messageId":"189","endLine":15,"endColumn":18},{"ruleId":"186","severity":1,"message":"211","line":16,"column":8,"nodeType":"188","messageId":"189","endLine":16,"endColumn":19},{"ruleId":"186","severity":1,"message":"212","line":17,"column":8,"nodeType":"188","messageId":"189","endLine":17,"endColumn":20},{"ruleId":"186","severity":1,"message":"213","line":18,"column":8,"nodeType":"188","messageId":"189","endLine":18,"endColumn":19},{"ruleId":"186","severity":1,"message":"214","line":19,"column":10,"nodeType":"188","messageId":"189","endLine":19,"endColumn":16},{"ruleId":"186","severity":1,"message":"215","line":20,"column":10,"nodeType":"188","messageId":"189","endLine":20,"endColumn":14},{"ruleId":"186","severity":1,"message":"216","line":29,"column":13,"nodeType":"188","messageId":"189","endLine":29,"endColumn":22},{"ruleId":"186","severity":1,"message":"217","line":32,"column":13,"nodeType":"188","messageId":"189","endLine":32,"endColumn":19},{"ruleId":"186","severity":1,"message":"218","line":33,"column":13,"nodeType":"188","messageId":"189","endLine":33,"endColumn":17},{"ruleId":"186","severity":1,"message":"219","line":34,"column":13,"nodeType":"188","messageId":"189","endLine":34,"endColumn":26},{"ruleId":"186","severity":1,"message":"220","line":35,"column":13,"nodeType":"188","messageId":"189","endLine":35,"endColumn":29},{"ruleId":"186","severity":1,"message":"221","line":46,"column":11,"nodeType":"188","messageId":"189","endLine":46,"endColumn":24},{"ruleId":"186","severity":1,"message":"222","line":50,"column":11,"nodeType":"188","messageId":"189","endLine":50,"endColumn":25},{"ruleId":"186","severity":1,"message":"216","line":29,"column":13,"nodeType":"188","messageId":"189","endLine":29,"endColumn":22},{"ruleId":"186","severity":1,"message":"223","line":17,"column":12,"nodeType":"188","messageId":"189","endLine":17,"endColumn":17},{"ruleId":"186","severity":1,"message":"224","line":17,"column":19,"nodeType":"188","messageId":"189","endLine":17,"endColumn":27},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'GET_CART'.","ObjectExpression","unexpected","'useSelector' is defined but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'param.id', and 'product'. Either include them or remove the dependency array.","ArrayExpression",["227"],"'Table' is defined but never used.","'Button' is defined but never used.","'productModaloff' is defined but never used.","'productModalon' is defined but never used.","'EditproductModalon' is defined but never used.","'EditproductModaloff' is defined but never used.","'EditcategoryModalon' is defined but never used.","'EditcategoryModaloff' is defined but never used.","'AddcategoryModaloff' is defined but never used.","'AddcategoryModalon' is defined but never used.","'AddProduct' is defined but never used.","'Editproduct' is defined but never used.","'EditCategory' is defined but never used.","'AddCategory' is defined but never used.","'Delete' is defined but never used.","'Edit' is defined but never used.","'orderList' is assigned a value but never used.","'module' is assigned a value but never used.","'edit' is assigned a value but never used.","'catagoryModal' is assigned a value but never used.","'AddcatagoryModal' is assigned a value but never used.","'removeProduct' is assigned a value but never used.","'removeCategory' is assigned a value but never used.","'state' is assigned a value but never used.","'setstate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},"Update the dependencies array to be: [dispatch, param.id, product]",{"range":"230","text":"231"},[1020,1022],"[dispatch, param.id, product]"]